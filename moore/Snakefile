rule moore0_run2:
  input:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}/{bunch}.digi'
  output:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M0{mooreversion}/{bunch}.digi',
    job = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M0{mooreversion}/{bunch}.py',
    runner = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M0{mooreversion}/{bunch}.sh'
  log:
    SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_{gaussversion}_{booleversion}_M0{mooreversion}/{bunch}.log'
  run:
    # create job file for gaudirun from template
    t = Template(open('moore/job.py').read())
    with open(f"{output.job}", "w") as job:
      job.write(t.substitute(dict(
          input_file=f'{input.sample}',
          output_file=f'{output.sample}'
      )))
    # create bash file to run Gauss from template
    t = Template(open('moore/L0runner.sh').read())
    with open(f"{output.runner}", "w") as job:
      job.write(t.substitute(dict(
          MOORE_VERSION=f'{wildcards.mooreversion}',
          YEAR=f"{wildcards.year}",
          JOB_FILE=f"{output.job}",
          APPCONFIGOPTS=f"{APPCONFIGOPTS}",
          DECFILESROOT=f"{DECFILESROOT}"
      )))
    # run simulation
    shell(f"(time env -i bash --noprofile --norc {output.runner}) &> {log}")


rule moore1_run2:
  input:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M0{mooreversion}/{bunch}.digi',
  output:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M1{mooreversion}/{bunch}.digi',
    job = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M1{mooreversion}/{bunch}.py',
    runner = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M1{mooreversion}/{bunch}.sh'
  log:
    SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_{gaussversion}_{booleversion}_M1{mooreversion}/{bunch}.log'
  run:
    # create job file for gaudirun from template
    t = Template(open('moore/job.py').read())
    with open(f"{output.job}", "w") as job:
      job.write(t.substitute(dict(
          input_file=f'{input.sample}',
          output_file=f'{output.sample}'
      )))
    # create bash file to run Gauss from template
    t = Template(open('moore/HLT1runner.sh').read())
    with open(f"{output.runner}", "w") as job:
      job.write(t.substitute(dict(
          MOORE_VERSION=f'{wildcards.mooreversion}',
          YEAR=f"{wildcards.year}",
          JOB_FILE=f"{output.job}",
          APPCONFIGOPTS=f"{APPCONFIGOPTS}",
          DECFILESROOT=f"{DECFILESROOT}"
      )))
    # run simulation
    shell(f"(time env -i bash --noprofile --norc {output.runner}) &> {log}")


rule moore2_run2:
  input:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M1{mooreversion}/{bunch}.digi',
  output:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}/{bunch}.digi',
    job = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}/{bunch}.py',
    runner = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}/{bunch}.sh'
  log:
    SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_{gaussversion}_{booleversion}_M2{mooreversion}/{bunch}.log'
  run:
    # create job file for gaudirun from template
    t = Template(open('moore/job.py').read())
    with open(f"{output.job}", "w") as job:
      job.write(t.substitute(dict(
          input_file=f'{input.sample}',
          output_file=f'{output.sample}'
      )))
    # create bash file to run Gauss from template
    t = Template(open('moore/HLT2runner.sh').read())
    with open(f"{output.runner}", "w") as job:
      job.write(t.substitute(dict(
          MOORE_VERSION=f'{wildcards.mooreversion}',
          YEAR=f"{wildcards.year}",
          JOB_FILE=f"{output.job}",
          APPCONFIGOPTS=f"{APPCONFIGOPTS}",
          DECFILESROOT=f"{DECFILESROOT}"
      )))
    # run simulation
    shell(f"(time env -i bash --noprofile --norc {output.runner}) &> {log}")
