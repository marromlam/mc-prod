rule gauss_run2:
  output:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}/{bunch}.sim',
    job = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}/{bunch}.py',
    runner = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}/{bunch}.sh'
  log:
    SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}/{bunch}.log'
  run:
    # create job file for gaudirun from template
    t = Template(open('gaudi/gauss/job.py').read())
    with open(f"{output.job}", "w") as job:
      job.write(t.substitute(dict(
          sim_file=f'{output.sample}',
          number_of_events=f"{nevts}")))
    # create bash file to run Gauss from template
    t = Template(open('gaudi/gauss/runner.sh').read())
    with open(f"{output.runner}", "w") as job:
      job.write(t.substitute(dict(
          GAUSS_VERSION=f'{wildcards.gaussversion}',
          EVENT_TYPE=f"{wildcards.eventtype}",
          YEAR=f"{wildcards.year}",
          JOB_FILE=f"{output.job}",
          APPCONFIGOPTS=f"{APPCONFIGOPTS}",
          DECFILESROOT=f"{DECFILESROOT}",
      )))
    # run simulation
    try:
      shell(f"(time env -i bash --noprofile --norc {output.runner}) &> {log}")
    except:
      print(f"\n\n{80*'='}")
      print("Simulation failed! See the LOG")
      print(f"{80*'='}\n")
      shell(f"cat {log}")
      print(f"\n\n{80*'='}\n")
      shell(f"touch {output.sample}")
