rule brunel_run2:
  input:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}/{bunch}.digi'
  output:
    sample = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}_B{brunelversion}/{bunch}.dst',
  log:
    job =    SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}_B{brunelversion}/{bunch}.py',
    runner = SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}_B{brunelversion}/{bunch}.sh',
    log =    SAMPLES + '/{eventtype}/{year}/{magnet}/{flag}_G{gaussversion}_B{booleversion}_M2{mooreversion}_B{brunelversion}/{bunch}.log'
  run:
    # create job file for gaudirun from template
    t = Template(open('gaudi/brunel/job.py').read())
    with open(f"{log.job}", "w") as job:
      job.write(t.substitute(dict(
          input_file=f'{input.sample}',
          output_file=f'{output.sample}',
          year=f'{wildcards.year}'
      )))
    # create bash file to run Gauss from template
    t = Template(open('gaudi/brunel/runner.sh').read())
    with open(f"{log.runner}", "w") as job:
      job.write(t.substitute(dict(
          BRUNEL_VERSION=f'{wildcards.brunelversion}',
          YEAR=f"{wildcards.year}",
          JOB_FILE=f"{log.job}",
          APPCONFIGOPTS=f"{APPCONFIGOPTS}",
      )))
    # run simulation
    shell(f"(time env -i bash --noprofile --norc {log.runner}) &> {log.log}")
